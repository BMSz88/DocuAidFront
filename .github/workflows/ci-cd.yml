name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Create test environment
        run: |
          echo "VITE_API_URL=https://docuaid-backend-production.up.railway.app" > .env
          mkdir -p src/components
          touch src/components/Login.jsx src/components/Signup.jsx
        
      - name: Run tests
        run: npm run test
        env:
          VITE_API_URL: 'https://docuaid-backend-production.up.railway.app'
          NODE_ENV: 'test'
        
      - name: Run linting
        run: npm run lint
        continue-on-error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Prepare build
        run: |
          mkdir -p src/components
          cp -f src/components/login.jsx src/components/Login.jsx 2>/dev/null || :
          cp -f src/components/signup.jsx src/components/Signup.jsx 2>/dev/null || :
        continue-on-error: true
        
      - name: Build project
        run: npm run build
        env:
          VITE_API_URL: 'https://docuaid-backend-production.up.railway.app'
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist/

  security:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --production
        continue-on-error: true
        
      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

  deploy:
    needs: security
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod' 